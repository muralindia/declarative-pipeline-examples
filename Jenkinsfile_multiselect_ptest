pipeline {
    agent any
   parameters {
  extendedChoice description: 'desc appnames', multiSelectDelimiter: ',', name: 'appnames', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', value: 'app1,app2,marigo-round,app4,app5,app6,app7,app8,app9,app10', visibleItemCount: 5
  
  choice(name: 'nspace', choices: ['rose-demo','rose-int', 'rose-prd'], description: 'Choose one')

  choice(name: 'ENV_Name', choices: ['demo','int','prd'], description: 'Choose one')

}
    stages {
        stage('Example-values') {
            steps {
                
                echo "Extendedchoice: ${params.appnames}"
                echo "Choice: ${params.nspace}"
               
            }
        }
    
    
 // new lines added
 
     stage('build-1by1') {
         steps {
            script {
                echo "${params.appnames}" 
                
                sh '''
                set +x
                
                rm -rf test10
                mkdir test10
                echo "folder created"
                
                '''
                
                str = env.appnames.split(',')
                for (String values :str)
                sh "echo $values >> test10/$values ; echo `cat test10/$values`-${params.ENV_Name} >> test10/appnewnames "
                
                str = env.appnames.split(',')
                for (String values :str)
                sh "echo $values >> test10/appnames ; cat test10/appnames" 
                
                sh '''
                set +x
                echo "cat new app names"
                cat test10/appnewnames
                '''
                echo "values via function"
                strg = env.appnames.split(',')
                for (String values :strg)
                funapp("$values")
                      
                echo "normal functions"
                applyrstuff('rstuffs', 'antk')
                }
               }
              }

    stage('apply hpa change to environment env.ENV_Name}') {
        steps {
            echo "Environment name : ${params.ENV_Name}"
            script {

                sh '''
                set +x
                echo "number of apps"
                cat test10/appnewnames | wc -l > test10/appcount
                napp=`cat test10/appcount`
                echo $napp

                ls -l .oshit/params/alldeploy/hpa
                cp .oshit/params/alldeploy/hpa .oshit/params/alldeploy/hpa.org
                ls -l .oshit/params/alldeploy/hpa.org
                cat .oshit/params/alldeploy/hpa.org
               
                whoami

                for i in `cat test10/appnewnames` ;  do 
                sed -i "s/.*APPLICATION_NAME.*/APPLICATION_NAME=$i/g" .oshit/params/alldeploy/hpa ;
                done 
                echo "changed hpa"
                cat .oshit/params/alldeploy/hpa
                '''

                
            }
    
        }
        }

    }
 }
              
       def applyrstuff(String a, String b){
                echo "hello rstuff"
                echo a
                echo b
                }
                
      def funapp(String a){
            echo a
            echo "second time"
            
            echo a
           
            }

