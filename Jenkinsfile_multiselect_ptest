
def depenv = params.ENV_Name

if (depenv == 'demo') {
    sec = "pipe1r1d"
    reg = "https://api.pipe1r1d:8443"
   } else if (depenv == 'int') {
       sec = "pipe1r1i"
       reg = "https://api.pipe1r1i:8443"
   }
   else {
       echo "env not correct"
   }


pipeline {
    agent any
   parameters {
  extendedChoice description: 'desc appnames', multiSelectDelimiter: ',', name: 'appnames', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', value: 'app1,app2,marigo-round,app4,app5,app6,app7,app8,app9,app10', visibleItemCount: 5
  
  choice(name: 'nspace', choices: ['rose-demo','rose-int', 'rose-prd'], description: 'Choose one')

  choice(name: 'ENV_Name', choices: ['demo','int','prd'], description: 'Choose one')

}
    stages {
        stage('Example-values') {
            steps {
                
                echo "Extendedchoice: ${params.appnames}"
                echo "Choice: ${params.nspace}"
               
            }
        }
    
    
 // new lines added
 
     stage('build-1by1') {
         steps {
            script {
                echo "${params.appnames}" 
                
                sh '''
                set +x
                
                rm -rf test10
                mkdir test10
                echo "folder created"
                
                '''
                
                str = env.appnames.split(',')
                for (String values :str)
                sh "echo $values >> test10/$values ; echo `cat test10/$values`-${params.ENV_Name} >> test10/appnewnames "
                
                str = env.appnames.split(',')
                for (String values :str)
                sh "echo $values >> test10/appnames ; cat test10/appnames" 
                
                sh '''
                set +x
                echo "cat new app names"
                cat test10/appnewnames
                '''
                echo "values via function"
                strg = env.appnames.split(',')
                for (String values :strg)
                funapp("$values")
                      
                echo "normal functions"
                applyrstuff('rstuffs', 'antk')
                }
               }
              }

    stage('apply hpa change to environment env.ENV_Name}') {
        steps {
            echo "Environment name : ${params.ENV_Name}"
            script {

                echo "NAMESPACE=${params.nspace}"

                sh '''
                set +x
                echo "number of apps"
                cat test10/appnewnames | wc -l > test10/appcount
                napp=`cat test10/appcount`
                echo $napp

                ls -l .oshit/params/alldeploy/hpa
                cp .oshit/params/alldeploy/hpa .oshit/params/alldeploy/hpa.org
                ls -l .oshit/params/alldeploy/hpa.org
                cat .oshit/params/alldeploy/hpa.org
               
                whoami
                '''
                sh "sed -i 's/.*NAMESPACE.*/NAMESPACE=${params.nspace}/g' .oshit/params/alldeploy/hpa"
                sh '''
                set +x
                cat .oshit/params/alldeploy/hpa
                '''
                def myFile = new File("${workspace}/test10/appnewnames")
 
                def lines = myFile.readLines()
                lines.each {line ->
                println line 
                echo line
                writeFile(file: 'zorg.txt', text: line)
                sh "sed -i s/.*APPLICATION_NAME.*/APPLICATION_NAME=`cat zorg.txt`/g .oshit/params/alldeploy/hpa"
                echo "hello my second change"
                
                sh "echo `cat test10/appside.txt`-${params.nspace} > test10/appsidename.txt ; cat test10/appsidename.txt"

                def data = readFile(file: 'zorg.txt')
                println(data)
                echo "app2-${params.ENV_Name}"

                echo "${data}"

                echo data

                if (data == "app2-${params.ENV_Name}"){
                    path1 = "myownpath"
                    sh "echo $path1 >> .oshit/params/alldeploy/hpa"
                } else if (data == "app1-${params.ENV_Name}"){
                    path1 = "myanotherpath"
                } else {
                    echo "Its a different path"
                }
            
                echo "app path : ${path1}"

                echo "regurl : ${reg}"
                echo "secp : ${sec}"
            
                }

                sh '''
                set +x
                cat .oshit/params/alldeploy/hpa
                '''

            }
    
        }
        }

    }
 }
              
       def applyrstuff(String a, String b){
                echo "hello rstuff"
                echo a
                echo b
                }
                
      def funapp(String a){
            echo a
            echo "second time"
            
            echo a
           
            }

