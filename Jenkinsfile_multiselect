pipeline {
    agent any
   parameters {
  extendedChoice description: 'desc appnames', multiSelectDelimiter: ',', name: 'appnames', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', value: 'app1,app2,app3,app4,app5,app6,app7,app8,app9,app10', visibleItemCount: 5
  
  choice(name: 'CHOICE', choices: ['A', 'B', 'C'], description: 'Choose one')

}
    stages {
        stage('Example-values') {
            steps {
                
                echo "Extendedchoice: ${params.appnames}"
                echo "Choice: ${params.CHOICE}"
            }
        }
    
    
 // new lines added
 
     stage('build-1by1') {
         steps {
            script {
                echo "${params.appnames}" 
                
                sh '''
                set +x
                
                echo "dapper is nice" > input.txt
                
                echo hello
                '''
                
                str = env.appnames.split(',')
                for (String values :str)
                 sh "sed -i 's/dapper/$values/g' input.txt"
                 echo  "app-name  $values" 
                 
                 cat input.txt
                
                
                strg = env.appnames.split(',')
                for (String values :strg)
                funapp("$values")
                      
                
                applyrstuff('rstuffs', 'antk')
                }
               }
              }
    }
 }
              
       def applyrstuff(String a, String b){
                echo "hello rstuff"
                echo a
                echo b
                }
                
      def funapp(String a){
          echo a
           
            }

